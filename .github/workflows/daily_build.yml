name: Daily Build and Deploy Tiles

on:
  schedule:
    - cron: "0 2 * * *"     # runs daily at 2 AM UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tiles-path: ${{ steps.export.outputs.tiles-path }}

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: ‚öôÔ∏è Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tippecanoe gdal-bin
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üèóÔ∏è Build tiles
        run: |
          echo "üèóÔ∏è Running tile builder..."
          python3 mineralink_fetch_and_tile.py
          echo "‚úÖ Build complete. Directory structure:"
          ls -R | head -60

      - name: üíæ Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: |
            tiles/**
            fallback_data/**
            index.html
            .nojekyll
          if-no-files-found: warn

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üíæ Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: ./site

      - name: üöÄ Deploy to gh-pages
        run: |
          echo "üöÄ Preparing deployment..."

          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          # Ensure we‚Äôre on or create gh-pages
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
          fi

          rm -rf *
          mkdir -p tiles fallback_data

          # Copy built files
          cp -r site/tiles/* ./tiles/ 2>/dev/null || echo "‚ö†Ô∏è No tiles found"
          cp -r site/fallback_data/* ./fallback_data/ 2>/dev/null || echo "‚ö†Ô∏è No fallback_data found"
          cp site/index.html ./index.html || echo "‚ö†Ô∏è Missing index.html"
          cp site/.nojekyll ./.nojekyll || echo "‚ö†Ô∏è Missing .nojekyll"

          echo "üìÇ Final gh-pages contents:"
          find . -maxdepth 3 | head -80

          git add .
          git commit -m "Auto-deploy $(date -u +'%Y-%m-%d %H:%M UTC')" || echo "No changes to commit"
          git push origin gh-pages --force

          echo "‚úÖ Deployment complete."
